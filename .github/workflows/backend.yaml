name: Backend Tasks

on:
  push: { branches: [ main, backend ] }
  pull_request: { branches: [ main, backend ] }

jobs:
  lint-markdown:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli

      - name: Lint Markdown files
        run: markdownlint '**/*.md'

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
        ports:
          - 5432:5432

    needs: [ lint-markdown ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set env
        run: |
          echo "OPENAI_KEY=${{ secrets.OPENAI_KEY }}" >> $GITHUB_ENV
          echo "POSTGRES_HOST=${{ vars.POSTGRES_HOST }}" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "POSTGRES_USER=${{ vars.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/*.java', '**/pom.xml') }}
          restore-keys: |
              ${{ runner.os }}-maven-
  
      - name: Run Maven tests
        run: mvn test

  build:
    needs: test
    
    runs-on: ubuntu-latest
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: armemius
        password: ${{ secrets.ARMEMIUS_DOCKERHUB_RW }}
    
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: armemius/companion-app-backend:latest

  sync-backend:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          persist-credentials: false

      - name: Set up Git configuration
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout backend branch into 'backend' directory
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: backend
          path: backend

      - name: Remove unnessary files
        run: |
          rm -rf ./backend/.git
          rm -rf ./backend/.github

      - name: Commit changes
        run: |
          git add backend
          git commit -m "Sync backend code to main/backend" || echo "No changes to commit"

      - name: Push changes to main branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main